'use client';

import { useState } from 'react';
import Link from 'next/link';

export default function UploadPage() {
  const [file, setFile] = useState<File | null>(null);
  const [isDragging, setIsDragging] = useState(false);
  const [language, setLanguage] = useState('ru');
  const [speakerDiarization, setSpeakerDiarization] = useState(false);
  const [sttProvider, setSttProvider] = useState('openai');

  const handleDragOver = (e: React.DragEvent) => {
    e.preventDefault();
    setIsDragging(true);
  };

  const handleDragLeave = () => {
    setIsDragging(false);
  };

  const handleDrop = (e: React.DragEvent) => {
    e.preventDefault();
    setIsDragging(false);
    
    if (e.dataTransfer.files && e.dataTransfer.files[0]) {
      setFile(e.dataTransfer.files[0]);
    }
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      setFile(e.target.files[0]);
    }
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    // Handle file upload and settings submission
    console.log('File:', file);
    console.log('Language:', language);
    console.log('Speaker Diarization:', speakerDiarization);
    console.log('STT Provider:', sttProvider);
    
    // In a real app, you would send this data to your backend
    alert('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–¥–∞—á...');
    // Redirect to tasks page would happen here
  };

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-3xl mx-auto">
        <div className="text-center mb-12">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white mb-2">–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–¥–∏–∞ —Ñ–∞–π–ª</h1>
          <p className="text-gray-600 dark:text-gray-300">
            –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à –∞—É–¥–∏–æ –∏–ª–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏
          </p>
        </div>

        <div className="bg-white dark:bg-gray-800 shadow rounded-lg p-6 mb-8">
          <form onSubmit={handleSubmit}>
            {/* File Upload Area */}
            <div className="mb-8">
              <label className="block text-lg font-medium text-gray-900 dark:text-white mb-4">
                –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª
              </label>
              
              <div 
                className={`border-2 border-dashed rounded-lg p-12 text-center cursor-pointer transition-colors ${
                  isDragging 
                    ? 'border-indigo-500 bg-indigo-50 dark:bg-indigo-900/20' 
                    : 'border-gray-300 dark:border-gray-600 hover:border-indigo-400 dark:hover:border-indigo-500'
                }`}
                onDragOver={handleDragOver}
                onDragLeave={handleDragLeave}
                onDrop={handleDrop}
                onClick={() => document.getElementById('fileInput')?.click()}
              >
                <input
                  id="fileInput"
                  type="file"
                  className="hidden"
                  onChange={handleFileChange}
                  accept="audio/*,video/*"
                />
                
                {file ? (
                  <div className="flex flex-col items-center">
                    <div className="text-4xl mb-4">üìÑ</div>
                    <p className="text-lg font-medium text-gray-900 dark:text-white">{file.name}</p>
                    <p className="text-gray-500 dark:text-gray-400 mt-2">
                      {(file.size / 1024 / 1024).toFixed(2)} –ú–ë
                    </p>
                    <button
                      type="button"
                      className="mt-4 text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300"
                      onClick={(e) => {
                        e.stopPropagation();
                        setFile(null);
                      }}
                    >
                      –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª
                    </button>
                  </div>
                ) : (
                  <div>
                    <div className="text-4xl mb-4">üìÅ</div>
                    <p className="text-lg font-medium text-gray-900 dark:text-white mb-2">
                      –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞
                    </p>
                    <p className="text-gray-500 dark:text-gray-400 mb-4">
                      –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
                    </p>
                    <p className="text-sm text-gray-500 dark:text-gray-400">
                      –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç MP3, WAV, MP4, MOV, AVI –∏ –¥—Ä—É–≥–∏–µ –∞—É–¥–∏–æ/–≤–∏–¥–µ–æ —Ñ–æ—Ä–º–∞—Ç—ã
                    </p>
                  </div>
                )}
              </div>
            </div>

            {/* Transcription Settings */}
            <div className="mb-8">
              <h2 className="text-xl font-semibold text-gray-900 dark:text-white mb-6">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏</h2>
              
              <div className="space-y-6">
                {/* Language Selection */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    –Ø–∑—ã–∫
                  </label>
                  <select
                    value={language}
                    onChange={(e) => setLanguage(e.target.value)}
                    className="w-full rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 px-4 py-2 text-gray-900 dark:text-white focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                  >
                    <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                    <option value="en">–ê–Ω–≥–ª–∏–π—Å–∫–∏–π</option>
                    <option value="es">–ò—Å–ø–∞–Ω—Å–∫–∏–π</option>
                    <option value="fr">–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π</option>
                    <option value="de">–ù–µ–º–µ—Ü–∫–∏–π</option>
                    <option value="it">–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π</option>
                    <option value="pt">–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π</option>
                    <option value="zh">–ö–∏—Ç–∞–π—Å–∫–∏–π</option>
                    <option value="ja">–Ø–ø–æ–Ω—Å–∫–∏–π</option>
                    <option value="ko">–ö–æ—Ä–µ–π—Å–∫–∏–π</option>
                  </select>
                </div>

                {/* Speaker Diarization */}
                <div className="flex items-center">
                  <input
                    id="speaker-diarization"
                    type="checkbox"
                    checked={speakerDiarization}
                    onChange={(e) => setSpeakerDiarization(e.target.checked)}
                    className="h-5 w-5 text-indigo-600 dark:text-indigo-400 rounded focus:ring-indigo-500"
                  />
                  <label htmlFor="speaker-diarization" className="ml-3 text-sm font-medium text-gray-700 dark:text-gray-300">
                    –í–∫–ª—é—á–∏—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–ø–∏–∫–µ—Ä–æ–≤ (–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö –≥–æ–≤–æ—Ä—è—â–∏—Ö)
                  </label>
                </div>

                {/* STT Provider */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    –ü—Ä–æ–≤–∞–π–¥–µ—Ä —Ä–µ—á–∏ –≤ —Ç–µ–∫—Å—Ç
                  </label>
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div 
                      className={`border rounded-lg p-4 cursor-pointer transition-colors ${
                        sttProvider === 'openai' 
                          ? 'border-indigo-500 bg-indigo-50 dark:bg-indigo-900/20' 
                          : 'border-gray-300 dark:border-gray-600 hover:border-indigo-400 dark:hover:border-indigo-500'
                      }`}
                      onClick={() => setSttProvider('openai')}
                    >
                      <div className="flex items-center">
                        <div className="flex-shrink-0 w-10 h-10 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center">
                          <span className="text-green-800 dark:text-green-400 font-bold">O</span>
                        </div>
                        <div className="ml-3">
                          <p className="font-medium text-gray-900 dark:text-white">OpenAI Whisper</p>
                          <p className="text-xs text-gray-500 dark:text-gray-400">–í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å</p>
                        </div>
                      </div>
                    </div>
                    
                    <div 
                      className={`border rounded-lg p-4 cursor-pointer transition-colors ${
                        sttProvider === 'google' 
                          ? 'border-indigo-500 bg-indigo-50 dark:bg-indigo-900/20' 
                          : 'border-gray-300 dark:border-gray-600 hover:border-indigo-400 dark:hover:border-indigo-500'
                      }`}
                      onClick={() => setSttProvider('google')}
                    >
                      <div className="flex items-center">
                        <div className="flex-shrink-0 w-10 h-10 rounded-full bg-blue-100 dark:bg-blue-900/30 flex items-center justify-center">
                          <span className="text-blue-800 dark:text-blue-400 font-bold">G</span>
                        </div>
                        <div className="ml-3">
                          <p className="font-medium text-gray-900 dark:text-white">Google Speech</p>
                          <p className="text-xs text-gray-500 dark:text-gray-400">–ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞</p>
                        </div>
                      </div>
                    </div>
                    
                    <div 
                      className={`border rounded-lg p-4 cursor-pointer transition-colors ${
                        sttProvider === 'azure' 
                          ? 'border-indigo-500 bg-indigo-50 dark:bg-indigo-900/20' 
                          : 'border-gray-300 dark:border-gray-600 hover:border-indigo-400 dark:hover:border-indigo-500'
                      }`}
                      onClick={() => setSttProvider('azure')}
                    >
                      <div className="flex items-center">
                        <div className="flex-shrink-0 w-10 h-10 rounded-full bg-orange-100 dark:bg-orange-900/30 flex items-center justify-center">
                          <span className="text-orange-800 dark:text-orange-400 font-bold">A</span>
                        </div>
                        <div className="ml-3">
                          <p className="font-medium text-gray-900 dark:text-white">Azure Speech</p>
                          <p className="text-xs text-gray-500 dark:text-gray-400">–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Submit Button */}
            <div className="flex justify-between">
              <Link 
                href="/"
                className="px-6 py-3 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 font-medium"
              >
                –ù–∞–∑–∞–¥
              </Link>
              <button
                type="submit"
                disabled={!file}
                className={`px-6 py-3 rounded-lg font-medium ${
                  file
                    ? 'bg-indigo-600 text-white hover:bg-indigo-700'
                    : 'bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-400 cursor-not-allowed'
                }`}
              >
                –ù–∞—á–∞—Ç—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}